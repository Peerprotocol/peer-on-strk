[
  {
    "type": "impl",
    "name": "PeerProtocolImpl",
    "interface_name": "peer_protocol::interfaces::ipeer_protocol::IPeerProtocol"
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "struct",
    "name": "peer_protocol::peer_protocol::CounterProposal",
    "members": [
      {
        "name": "id",
        "type": "core::integer::u256"
      },
      {
        "name": "proposal_id",
        "type": "core::integer::u256"
      },
      {
        "name": "creator",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "accepted_collateral_token",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "required_collateral_value",
        "type": "core::integer::u256"
      },
      {
        "name": "token_amount",
        "type": "core::integer::u256"
      },
      {
        "name": "amount",
        "type": "core::integer::u256"
      },
      {
        "name": "interest_rate",
        "type": "core::integer::u64"
      },
      {
        "name": "duration",
        "type": "core::integer::u64"
      },
      {
        "name": "created_at",
        "type": "core::integer::u64"
      }
    ]
  },
  {
    "type": "enum",
    "name": "peer_protocol::peer_protocol::ProposalType",
    "variants": [
      {
        "name": "BORROWING",
        "type": "()"
      },
      {
        "name": "LENDING",
        "type": "()"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "peer_protocol::peer_protocol::Proposal",
    "members": [
      {
        "name": "id",
        "type": "core::integer::u256"
      },
      {
        "name": "lender",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "borrower",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "proposal_type",
        "type": "peer_protocol::peer_protocol::ProposalType"
      },
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "accepted_collateral_token",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "required_collateral_value",
        "type": "core::integer::u256"
      },
      {
        "name": "released_collateral",
        "type": "core::integer::u256"
      },
      {
        "name": "amount",
        "type": "core::integer::u256"
      },
      {
        "name": "amount_repaid",
        "type": "core::integer::u256"
      },
      {
        "name": "token_amount",
        "type": "core::integer::u256"
      },
      {
        "name": "interest_rate",
        "type": "core::integer::u64"
      },
      {
        "name": "duration",
        "type": "core::integer::u64"
      },
      {
        "name": "created_at",
        "type": "core::integer::u64"
      },
      {
        "name": "is_accepted",
        "type": "core::bool"
      },
      {
        "name": "accepted_at",
        "type": "core::integer::u64"
      },
      {
        "name": "repayment_date",
        "type": "core::integer::u64"
      },
      {
        "name": "is_repaid",
        "type": "core::bool"
      },
      {
        "name": "num_proposal_counters",
        "type": "core::integer::u256"
      },
      {
        "name": "is_cancelled",
        "type": "core::bool"
      },
      {
        "name": "borrower_nft_id",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "struct",
    "name": "peer_protocol::peer_protocol::BorrowedDetails",
    "members": [
      {
        "name": "token_borrowed",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "repayment_time",
        "type": "core::integer::u64"
      },
      {
        "name": "interest_rate",
        "type": "core::integer::u64"
      },
      {
        "name": "amount_borrowed",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "struct",
    "name": "peer_protocol::peer_protocol::LiquidationInfo",
    "members": [
      {
        "name": "proposal_id",
        "type": "core::integer::u256"
      },
      {
        "name": "borrower",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "collateral_token",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "loan_token",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "collateral_amount",
        "type": "core::integer::u256"
      },
      {
        "name": "loan_amount",
        "type": "core::integer::u256"
      },
      {
        "name": "current_ltv",
        "type": "core::integer::u256"
      },
      {
        "name": "can_be_liquidated",
        "type": "core::bool"
      }
    ]
  },
  {
    "type": "enum",
    "name": "peer_protocol::peer_protocol::TransactionType",
    "variants": [
      {
        "name": "DEPOSIT",
        "type": "()"
      },
      {
        "name": "WITHDRAWAL",
        "type": "()"
      },
      {
        "name": "LEND",
        "type": "()"
      },
      {
        "name": "BORROW",
        "type": "()"
      },
      {
        "name": "REPAY",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "peer_protocol::peer_protocol::Transaction",
    "members": [
      {
        "name": "transaction_type",
        "type": "peer_protocol::peer_protocol::TransactionType"
      },
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "amount",
        "type": "core::integer::u256"
      },
      {
        "name": "timestamp",
        "type": "core::integer::u64"
      },
      {
        "name": "tx_hash",
        "type": "core::felt252"
      }
    ]
  },
  {
    "type": "struct",
    "name": "peer_protocol::peer_protocol::UserAssets",
    "members": [
      {
        "name": "token_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "total_lent",
        "type": "core::integer::u256"
      },
      {
        "name": "total_borrowed",
        "type": "core::integer::u256"
      },
      {
        "name": "interest_earned",
        "type": "core::integer::u256"
      },
      {
        "name": "available_balance",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "struct",
    "name": "peer_protocol::peer_protocol::UserDeposit",
    "members": [
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "amount",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::array::Span::<peer_protocol::peer_protocol::UserDeposit>",
    "members": [
      {
        "name": "snapshot",
        "type": "@core::array::Array::<peer_protocol::peer_protocol::UserDeposit>"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::option::Option::<core::integer::u256>",
    "variants": [
      {
        "name": "Some",
        "type": "core::integer::u256"
      },
      {
        "name": "None",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "peer_protocol::peer_protocol::PoolData",
    "members": [
      {
        "name": "pool_token",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "is_active",
        "type": "core::bool"
      },
      {
        "name": "total_deposits",
        "type": "core::integer::u256"
      },
      {
        "name": "total_borrowed",
        "type": "core::integer::u256"
      },
      {
        "name": "total_collateral_locked",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "struct",
    "name": "peer_protocol::peer_protocol::PoolRates",
    "members": [
      {
        "name": "base_rate",
        "type": "core::integer::u256"
      },
      {
        "name": "utilization_optimal",
        "type": "core::integer::u256"
      },
      {
        "name": "slope1",
        "type": "core::integer::u256"
      },
      {
        "name": "slope2",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "interface",
    "name": "peer_protocol::interfaces::ipeer_protocol::IPeerProtocol",
    "items": [
      {
        "type": "function",
        "name": "deposit",
        "inputs": [
          {
            "name": "token_address",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "add_supported_token",
        "inputs": [
          {
            "name": "token_address",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "asset_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "withdraw",
        "inputs": [
          {
            "name": "token_address",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "create_borrow_proposal",
        "inputs": [
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "accepted_collateral_token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          },
          {
            "name": "interest_rate",
            "type": "core::integer::u64"
          },
          {
            "name": "duration",
            "type": "core::integer::u64"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "cancel_proposal",
        "inputs": [
          {
            "name": "proposal_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "accept_proposal",
        "inputs": [
          {
            "name": "proposal_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "create_counter_proposal",
        "inputs": [
          {
            "name": "proposal_id",
            "type": "core::integer::u256"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          },
          {
            "name": "accepted_collateral_token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "interest_rate",
            "type": "core::integer::u64"
          },
          {
            "name": "duration",
            "type": "core::integer::u64"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_locked_funds",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_counter_proposals",
        "inputs": [
          {
            "name": "proposal_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<peer_protocol::peer_protocol::CounterProposal>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_borrow_proposal_details",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<peer_protocol::peer_protocol::Proposal>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "repay_proposal",
        "inputs": [
          {
            "name": "proposal_id",
            "type": "core::integer::u256"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_borrowed_tokens",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<peer_protocol::peer_protocol::BorrowedDetails>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "create_lending_proposal",
        "inputs": [
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "accepted_collateral_token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          },
          {
            "name": "interest_rate",
            "type": "core::integer::u64"
          },
          {
            "name": "duration",
            "type": "core::integer::u64"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_lending_proposal_details",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<peer_protocol::peer_protocol::Proposal>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "check_positions_for_liquidation",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<peer_protocol::peer_protocol::LiquidationInfo>"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "liquidate_position",
        "inputs": [
          {
            "name": "proposal_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_token_price",
        "inputs": [
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "(core::integer::u256, core::integer::u32)"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_transaction_history",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "offset",
            "type": "core::integer::u64"
          },
          {
            "name": "limit",
            "type": "core::integer::u64"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<peer_protocol::peer_protocol::Transaction>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_user_assets",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<peer_protocol::peer_protocol::UserAssets>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_user_deposits",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Span::<peer_protocol::peer_protocol::UserDeposit>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "deploy_liquidity_pool",
        "inputs": [
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "opt_threshold_percentage",
            "type": "core::option::Option::<core::integer::u256>"
          },
          {
            "name": "opt_minimum_liquidation_amount",
            "type": "core::option::Option::<core::integer::u256>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_liquidity_pool_data",
        "inputs": [
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "peer_protocol::peer_protocol::PoolData"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "calculate_rates",
        "inputs": [
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "total_borrows",
            "type": "core::integer::u256"
          },
          {
            "name": "total_deposits",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "(core::integer::u256, core::integer::u256)"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "update_pool_rates",
        "inputs": [
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "base_rate",
            "type": "core::integer::u256"
          },
          {
            "name": "utilization_optimal",
            "type": "core::integer::u256"
          },
          {
            "name": "slope1",
            "type": "core::integer::u256"
          },
          {
            "name": "slope2",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_pool_rates",
        "inputs": [
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "peer_protocol::peer_protocol::PoolRates"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "deposit_to_pool",
        "inputs": [
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "withdraw_from_pool",
        "inputs": [
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "borrow_from_pool",
        "inputs": [
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "collateral",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "upgrade",
        "inputs": [
          {
            "name": "new_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "AccessControlImpl",
    "interface_name": "openzeppelin_access::accesscontrol::interface::IAccessControl"
  },
  {
    "type": "interface",
    "name": "openzeppelin_access::accesscontrol::interface::IAccessControl",
    "items": [
      {
        "type": "function",
        "name": "has_role",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_role_admin",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "grant_role",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "revoke_role",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounce_role",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "AccessControlCamelImpl",
    "interface_name": "openzeppelin_access::accesscontrol::interface::IAccessControlCamel"
  },
  {
    "type": "interface",
    "name": "openzeppelin_access::accesscontrol::interface::IAccessControlCamel",
    "items": [
      {
        "type": "function",
        "name": "hasRole",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "getRoleAdmin",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "grantRole",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "revokeRole",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounceRole",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "SRC5Impl",
    "interface_name": "openzeppelin_introspection::interface::ISRC5"
  },
  {
    "type": "interface",
    "name": "openzeppelin_introspection::interface::ISRC5",
    "items": [
      {
        "type": "function",
        "name": "supports_interface",
        "inputs": [
          {
            "name": "interface_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "protocol_fee_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "spok_nft",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "pragma_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::DepositSuccessful",
    "kind": "struct",
    "members": [
      {
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::SupportedTokenAdded",
    "kind": "struct",
    "members": [
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::WithdrawalSuccessful",
    "kind": "struct",
    "members": [
      {
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::TransactionRecorded",
    "kind": "struct",
    "members": [
      {
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "transaction_type",
        "type": "peer_protocol::peer_protocol::TransactionType",
        "kind": "data"
      },
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "timestamp",
        "type": "core::integer::u64",
        "kind": "data"
      },
      {
        "name": "tx_hash",
        "type": "core::felt252",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::ProposalCreated",
    "kind": "struct",
    "members": [
      {
        "name": "proposal_type",
        "type": "peer_protocol::peer_protocol::ProposalType",
        "kind": "data"
      },
      {
        "name": "borrower",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "interest_rate",
        "type": "core::integer::u64",
        "kind": "data"
      },
      {
        "name": "duration",
        "type": "core::integer::u64",
        "kind": "data"
      },
      {
        "name": "created_at",
        "type": "core::integer::u64",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::ProposalAccepted",
    "kind": "struct",
    "members": [
      {
        "name": "proposal_type",
        "type": "peer_protocol::peer_protocol::ProposalType",
        "kind": "data"
      },
      {
        "name": "accepted_by",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::ProposalCountered",
    "kind": "struct",
    "members": [
      {
        "name": "proposal_id",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "creator",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "interest_rate",
        "type": "core::integer::u64",
        "kind": "data"
      },
      {
        "name": "duration",
        "type": "core::integer::u64",
        "kind": "data"
      },
      {
        "name": "created_at",
        "type": "core::integer::u64",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::ProposalRepaid",
    "kind": "struct",
    "members": [
      {
        "name": "proposal_type",
        "type": "peer_protocol::peer_protocol::ProposalType",
        "kind": "data"
      },
      {
        "name": "repaid_by",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::LendingProposalCreated",
    "kind": "struct",
    "members": [
      {
        "name": "proposal_type",
        "type": "peer_protocol::peer_protocol::ProposalType",
        "kind": "data"
      },
      {
        "name": "lender",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "interest_rate",
        "type": "core::integer::u64",
        "kind": "data"
      },
      {
        "name": "duration",
        "type": "core::integer::u64",
        "kind": "data"
      },
      {
        "name": "created_at",
        "type": "core::integer::u64",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::ProposalCancelled",
    "kind": "struct",
    "members": [
      {
        "name": "caller",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "proposal_id",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::PositionLiquidated",
    "kind": "struct",
    "members": [
      {
        "name": "caller",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "proposal_id",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::PoolCreated",
    "kind": "struct",
    "members": [
      {
        "name": "created_by",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "created_at",
        "type": "core::integer::u64",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
    "kind": "struct",
    "members": [
      {
        "name": "role",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "account",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "sender",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
    "kind": "struct",
    "members": [
      {
        "name": "role",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "account",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "sender",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
    "kind": "struct",
    "members": [
      {
        "name": "role",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "previous_admin_role",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "new_admin_role",
        "type": "core::felt252",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "RoleGranted",
        "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
        "kind": "nested"
      },
      {
        "name": "RoleRevoked",
        "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
        "kind": "nested"
      },
      {
        "name": "RoleAdminChanged",
        "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_introspection::src5::SRC5Component::Event",
    "kind": "enum",
    "variants": []
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::RatesUpdated",
    "kind": "struct",
    "members": [
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "base_rate",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "utilization_optimal",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "slope1",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "slope2",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::PoolDepositSuccessful",
    "kind": "struct",
    "members": [
      {
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::PoolWithdrawalSuccessful",
    "kind": "struct",
    "members": [
      {
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::PoolBorrowSuccessful",
    "kind": "struct",
    "members": [
      {
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "borrowed",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "collateral",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "borrowed_amount",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "collateral_locked_amount",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
    "kind": "struct",
    "members": [
      {
        "name": "class_hash",
        "type": "core::starknet::class_hash::ClassHash",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "Upgraded",
        "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "peer_protocol::peer_protocol::PeerProtocol::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "DepositSuccessful",
        "type": "peer_protocol::peer_protocol::PeerProtocol::DepositSuccessful",
        "kind": "nested"
      },
      {
        "name": "SupportedTokenAdded",
        "type": "peer_protocol::peer_protocol::PeerProtocol::SupportedTokenAdded",
        "kind": "nested"
      },
      {
        "name": "WithdrawalSuccessful",
        "type": "peer_protocol::peer_protocol::PeerProtocol::WithdrawalSuccessful",
        "kind": "nested"
      },
      {
        "name": "TransactionRecorded",
        "type": "peer_protocol::peer_protocol::PeerProtocol::TransactionRecorded",
        "kind": "nested"
      },
      {
        "name": "ProposalCreated",
        "type": "peer_protocol::peer_protocol::PeerProtocol::ProposalCreated",
        "kind": "nested"
      },
      {
        "name": "ProposalAccepted",
        "type": "peer_protocol::peer_protocol::PeerProtocol::ProposalAccepted",
        "kind": "nested"
      },
      {
        "name": "ProposalCountered",
        "type": "peer_protocol::peer_protocol::PeerProtocol::ProposalCountered",
        "kind": "nested"
      },
      {
        "name": "ProposalRepaid",
        "type": "peer_protocol::peer_protocol::PeerProtocol::ProposalRepaid",
        "kind": "nested"
      },
      {
        "name": "LendingProposalCreated",
        "type": "peer_protocol::peer_protocol::PeerProtocol::LendingProposalCreated",
        "kind": "nested"
      },
      {
        "name": "ProposalCancelled",
        "type": "peer_protocol::peer_protocol::PeerProtocol::ProposalCancelled",
        "kind": "nested"
      },
      {
        "name": "PositionLiquidated",
        "type": "peer_protocol::peer_protocol::PeerProtocol::PositionLiquidated",
        "kind": "nested"
      },
      {
        "name": "PoolCreated",
        "type": "peer_protocol::peer_protocol::PeerProtocol::PoolCreated",
        "kind": "nested"
      },
      {
        "name": "AccessControlEvent",
        "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
        "kind": "flat"
      },
      {
        "name": "SRC5Event",
        "type": "openzeppelin_introspection::src5::SRC5Component::Event",
        "kind": "flat"
      },
      {
        "name": "RatesUpdated",
        "type": "peer_protocol::peer_protocol::PeerProtocol::RatesUpdated",
        "kind": "nested"
      },
      {
        "name": "PoolDepositSuccessful",
        "type": "peer_protocol::peer_protocol::PeerProtocol::PoolDepositSuccessful",
        "kind": "nested"
      },
      {
        "name": "PoolWithdrawalSuccessful",
        "type": "peer_protocol::peer_protocol::PeerProtocol::PoolWithdrawalSuccessful",
        "kind": "nested"
      },
      {
        "name": "PoolBorrowSuccessful",
        "type": "peer_protocol::peer_protocol::PeerProtocol::PoolBorrowSuccessful",
        "kind": "nested"
      },
      {
        "name": "UpgradeableEvent",
        "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
        "kind": "flat"
      }
    ]
  }
]